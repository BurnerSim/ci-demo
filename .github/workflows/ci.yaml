name: C++ CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  format-check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Clang-Format
        run: sudo apt-get install -y clang-format

      - name: Check Clang-Format
        run: |
          find . \( -name '*.cpp' -o -name '*.hpp' -o -name '*.h' \) \
            -not -path "./build/*" \
            -not -path "./test/catch.hpp" \
            -not -name "httplib.h" \
            -not -name "json.hpp" \
            -exec clang-format -style=file -i {} +

          # Überprüfen ob Änderungen vorgenommen wurden
          if git diff --exit-code; then
            echo "No formatting issues found"
            exit 0
          else
            echo "Formatting issues found. Please run clang-format locally"
            git diff
            exit 1
          fi

  cppcheck-analysis:
    runs-on: ubuntu-24.04
    needs: format-check
    steps:
      - uses: actions/checkout@v4

      - name: Install cppcheck
        run: sudo apt-get install -y cppcheck

      - name: Run cppcheck
        run: |
          cppcheck --enable=all \
            --suppress=missingInclude \
            --suppress=unmatchedSuppression \
            -Iinclude \
            --output-file=cppcheck_report.txt \
            src/ include/

      - name: Upload cppcheck report
        uses: actions/upload-artifact@v4
        with:
          name: cppcheck-report
          path: cppcheck_report.txt
          retention-days: 14

  static-analysis:
    runs-on: ubuntu-24.04
    needs: format-check
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for Clang-Tidy
        run: sudo apt-get install -y clang-tidy bear

      - name: Generate Compilation Database with Bear
        run: bear -- make

      - name: Run Clang-Tidy
        run: |
          find . \( -name '*.cpp' -o -name '*.hpp' -o -name '*.h' \) \
            -not -path "./build/*" \
            -not -path "./test/catch.hpp" \
            -not -name "httplib.h" \
            -not -name "json.hpp" \
            -exec clang-tidy {} \+

  build:
    runs-on: ubuntu-24.04
    needs: [cppcheck-analysis, static-analysis]
    steps:
      - uses: actions/checkout@v4

      - name: Install build essentials
        run: sudo apt-get install -y build-essential

      - name: Build with Make
        run: make all

  test:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt-get install -y build-essential

      - name: Build and run tests
        run: make test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test_results.xml
          retention-days: 14

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4.0.3
        if: always()
        with:
          report_paths: "test_results.xml"
